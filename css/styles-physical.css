@font-face{
    font-family: charter;
    src: url('../fonts/CharterRegular.otf');
    font-style: normal;
    font-weight: 400;
}

@font-face{
    font-family: charter;
    src: url('../fonts/CharterItalic.otf');
    font-style: italic;
    font-weight: 400;
}

@font-face{
    font-family: charter;
    src: url('../fonts/CharterBold.otf');
    font-style: normal;
    font-weight: bold;
}

@font-face{
    font-family: charter;
    src: url('../fonts/CharterBoldItalic.otf');
    font-style: italic;
    font-weight: bold;
}

:root {
    font-size: 16px;
    --gray30: #212121;
    --gray20: #212429;
    --gray10: #616161;
}

html{
    scroll-behavior: smooth;
}
body{
    color: var(--gray30);
    font-family: 'Roboto', sans-serif;
    margin: 0;
    /* font-family:charter;*/
}

a {
    color: var(--gray30);
}
header{
    font-size: 14px;
    color: var(--gray10);
    position: absolute;
    left: -232px;
    top: 64px;
    width: 188px;
}

header a {
    color: var(--gray10);
    text-decoration: none;
}
header li {
    margin-bottom: 16px;
}
header a:hover {
    color: var(--gray30);
}

nav details summary {
    font-weight: bold;
    line-height: 24px;
}
h1 {
    font-size: 60px;
    /* font-size: 3.75em; */
    margin-top: 64px;
    margin-bottom: 16px;
    font-weight: normal;
    /* border: 10px solid red; */
}
/* h1 + p {
    background: red;
    margin-bottom: 64px;
} */

hr{
    margin: 64px 0;
}
h2{
    font-size: 2em;
    margin: 64px 0 40px;
    font-weight: normal;
}

h3{
    font-size: 1.5em;
    margin-top: 16px;
    margin-bottom: 24px;
    font-weight: normal;
}

pre{
    background: #121212;
    color: white;
    padding: 40px;
    font-family: 'Roboto';
    line-height: 24px;
}
blockquote{
    border-left: 4px solid var(--gray30);
    font-size: 24px;
    line-height: 24px;
    margin: 32px 0;
    padding-left: 16px;
    /* border: 1px solid red; */
}

blockquote span {
    color: var(--gray10);
}

blockquote span::before {
    content: '- ';
}

.header {
    position: sticky;
    top: 0;
}
.header-content{
    position: relative;
}
.main{
}
.wrapper{
    width: 902px;
    margin: auto;
}

.main-content {
    background: white; 
}

.title{
    background: red;
}
.services{
    background: gray;
}
.pricing{
    background: moccasin;
}
.hero {
    background: linear-gradient(to top, rgba(255, 255, 255, .3), transparent), url('../img/patron.png');
    height: 350px;
}
.section-content {
    margin-top: 164px;
   position: relative;
}
.section-content:first-of-type {
    margin: 0;
}
.section-content ol li {
    line-height: 24px;
}

.section-content ul li {
    margin-bottom: 16px;
}
.section-content + hr {
    display: none;
}
.section-content img {
    margin-top: 40px;
}

.section-content{
    counter-reset: titleList;
}
.section-content h3{
    /*  background: red;*/
    counter-increment:titleList; 
    padding-bottom: 8px;
}

.section-content h3::before{
    content: counter(titleList)'. ';
}

.section-content h3::after {
    content: '';
    width: 80px;
    height: 4px;
    background: var(--gray30);
    display: inline-block;
    position: absolute;
    left: 0;
    bottom: 0;
  }

/* el box sizing
box-sizing: border-box;
si se define un elemento con un ancho de 100 pixeles. Esos 100 pixeles incluíran cualquier borde o relleno que se añadan, y la caja de contenido se encogerá para absorber ese ancho extra. 
*/

/* Posicion relative mueve,Las propiedades top y bottom especifican el desplazamiento vertical desde su posición original; las propiedades left y right especifican su desplazamiento horizontal.
si pones un elememnto en absoluto y quieres quer sea relativa a un contenedor, el contenedor deser ser relativo, sino el elemento absoluto funciona tomando los valores del viewport
*/
